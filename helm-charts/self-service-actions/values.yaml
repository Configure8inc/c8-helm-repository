nameOverride: ""
fullnameOverride: ""

commonLabels: {}

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - example.com
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: ssl-redirect
  #       port:
  #         name: use-annotation

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


service:
  enabled: false
  type: ClusterIP
  port: ""

updateStrategy:
   rollingUpdate:
     maxUnavailable: 0
   type: RollingUpdate

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

#Image for tge DISCOVERY_JOB_WORKER
DISCOVERY_JOB_IMAGE:

container:
  port: "5000"

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /self-service/api/health
    port: http
  failureThreshold: 5
  initialDelaySeconds: 90
  periodSeconds: 60
  timeoutSeconds: 10
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /self-service/api/health
    port: http
  failureThreshold: 5
  initialDelaySeconds: 60
  periodSeconds: 5
  timeoutSeconds: 10
  successThreshold: 2

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# --
variables:
  # -- Unique secret key
  API_KEY: ""
  # -- Used to define the relative path to the backend API, by default should be /self-service/api
  API_PREFIX: "/self-service/api"
  # -- Crypto initialization vector
  CRYPTO_IV: ""
  # -- Crypto password
  CRYPTO_SECRET: ""
  # -- The mechanism of how to authenticate with the database. Might be 'mqlDriver' for atlas mongodb or SCRAM-SHA-1 for regular one  DB_AUTH_MECHANISM: ""
  # -- Database host
  DB_HOST: ""
  # -- Database name
  DB_DATABASE: ""
  # -- Database port
  DB_PORT: ""
  # -- Database username
  DB_USERNAME: ""
  # -- Database password
  DB_PASSWORD: ""
  # -- Type of the driver. For atlas mongoDbAtlas and mongoDb for the regular instance
  MONGO_DRIVER_TYPE: ""
  # -- Different configurations preset, by default should be prod, other only for the development.
  ENV: "prod"
  # -- Unique secret used for sign user's JWT tokens
  JWT_SECRET: ""
  # -- Might be info, error, verbose, warning. By default recommended to be info 
  LOGGING_LEVEL: "info"
  # -- Disabling/enabling application for the maintenance
  MAINTENANCE_MODE: ""
  # -- Used only for the development, should be production
  NODE_ENV: "production"
  # -- Application port
  NODE_PORT: "5005"
  # -- Elastic url
  OPENSEARCH_NODE: ""
  # -- The application name, should be c8app
  SERVICE: "c8app"
  # -- Application stage, beyond development should be prod
  STAGE: "prod"
  # -- Description for the swagger file, usually shouldn't be changed
  SWAGGER_DESCRIPTION: "Production Self Service API documentation"
  # -- Enable or disable swagger documentation
  SWAGGER_ENABLED: "false"
  # -- Swagger documentation relative url, by default /self-service/api/docs
  SWAGGER_PREFIX: "/self-service/api/docs"
  # -- Swagger documentation title
  SWAGGER_TITLE: "C8 Self-Service API"
  # -- Application timezone
  TZ: "America/New_York"
  # -- Application version. Should be with the default value
  VERSION: ""

# -- variables from configmaps
variables_from_configmaps:
  configmap_names: []
  # - db_config
  # - app_config
# -- variables from secrets
variables_from_secrets:
  secrets_names: []
  # - c8-k8s-agent
  # - app_secrets

# -- Getting params from AWS Systems Manager Parameter Store (External Secrets Operator https://external-secrets.io/ should be installed to the cluster) 
aws_parameter_store:
  enabled: false
  refreshInterval: 1h
  # The kube secret name that will be created
  secret_name: #qa-use2-djm-params
  data:

# -- Getting params from AWS Secrets Manager  (External Secrets Operator https://external-secrets.io/ should be installed to the cluster)
aws_secrets_manager:
  enabled: false
  refreshInterval: 0
  secret_name: #qa-use2-djm-secrets
  data:
