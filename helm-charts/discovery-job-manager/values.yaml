nameOverride: ""
fullnameOverride: ""

commonLabels: {}

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - example.com
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: ssl-redirect
  #       port:
  #         name: use-annotation

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


service:
  enabled: false
  type: ClusterIP
  port: ""

replicaCount: 1

updateStrategy:
  #  rollingUpdate:
  #    maxUnavailable: 0
   type: Recreate

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

#Image for tge DISCOVERY_JOB_WORKER
DJW_IMAGE:

container:
  port: "5000"

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  failureThreshold: 5
  initialDelaySeconds: 90
  periodSeconds: 60
  timeoutSeconds: 10
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  failureThreshold: 5
  initialDelaySeconds: 60
  periodSeconds: 5
  timeoutSeconds: 10
  successThreshold: 2

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

  job_worker:
    name:
    annotations: {}

# --
variables:
  # --
  API_PREFIX: "/api/v1"
  # --
  DB_CONFIG: ""
  # --
  DB_NAME: ""
  # --
  DISCOVERY_CONTAINER_NAME: "c8-discovery-job-worker"
  # --
  DJW_AWS_REGION: ""
  # --
  DJW_CRYPTO_IV: ""
  # --
  DJW_CRYPTO_SECRET: ""
  # --
  DJW_EKS_NAMESPACE: ""
  # --
  DJW_OPENSEARCH_NODE: ""
  # --
  DJW_SERVICE: "discovery-job-worker"
  # --
  DJW_SERVICE_ACCOUNT_NAME: ""
  # --
  DJW_SQS_NOTIFICATION_QUEUE_URL: ""
  # --
  DJW_TRACK_ENTITY_LINEAGE: "true"
  # --
  DRYRUN: "false"
  # --
  ENV: "prod"
  # --
  JOB_ACTIVE_LOOKBACK_MIN: "15"
  # --
  JOB_DEAD_TIMEOUT_HOURS: "3"
  # --
  JOB_TYPES: "DISCOVERY, DISCOVERY_ON_DEMAND, AUTOMAPPING_BY_TAGS, COSTS_RECALCULATE, SCORECARD_AGGREGATION, SCORECARD_AGGREGATION_ON_DEMAND, SSA_TERMINATION, CALCULATE_SERVICE_DETAILS, SCORECARD_NOTIFICATION, SERVICE_NOTIFICATION, CREDENTIALS_NOTIFICATION"
  # --
  LOOP_SLEEP_TIME: "10000"
  # --
  MAX_JOB_LIMIT: "10"
  # --
  NODE_ENV: "production"
  # --
  NODE_PORT: "3000"
  # --
  SERVICE: "c8-discovery-job-manager-prod"
  # --
  STAGE: "prod"
  # --
  TASK_GROUP: "discovery-task-group"
  # --
  USE_EKS: "true"
  # --
  WORKER_TRIGGER_THRESHOLD: "120000"
  
# -- variables from configmaps
variables_from_configmaps:
  configmap_names: []
  # - db_config
  # - app_config
# -- variables from secrets
variables_from_secrets:
  secrets_names: []
  # - c8-k8s-agent
  # - app_secrets

# -- Getting params from AWS Systems Manager Parameter Store (External Secrets Operator https://external-secrets.io/ should be installed to the cluster) 
aws_parameter_store:
  enabled: false
  refreshInterval: 1h
  # The kube secret name that will be created
  secret_name: #qa-use2-djm-params
  data:

# -- Getting params from AWS Secrets Manager  (External Secrets Operator https://external-secrets.io/ should be installed to the cluster)
aws_secrets_manager:
  enabled: false
  refreshInterval: 0
  secret_name: #qa-use2-djm-secrets
  data:
