nameOverride: ""
fullnameOverride: ""

commonLabels: {}

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 5m
  labels: {}

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - host: example.com
      paths:
        - /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

updateStrategy:
  rollingUpdate:
    maxUnavailable: 0
  type: RollingUpdate

service:
  enabled: false
  type: ClusterIP
  port: ""

replicaCount: 1

autoscaling:
  enabled: false
  minReplicasFrontend: 1
  maxReplicasFrontend: 10
  minReplicasBackend: 1
  maxReplicasBackend: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

image:
  repository: "699577016021.dkr.ecr.us-east-2.amazonaws.com/c8"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - c8-docker-registry-secret

container:
  port: "5000"

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http

# readinessProbe:
#   httpGet:
#     path: /
#     port: http

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podDisruptionBudget:
  # Specifies whether pod disruption budget should be created
  enabled: false
  # Number or percentage of pods that must be available
  minAvailable: 50%

variables:
  # -- Used to define the relative path to the backend API, by default should be /api.v1
  API_PREFIX: "/api/v1"
  # -- Deprecated and not needed anymore, so will be deleted soon
  AWS_REGION: "na"
  # -- Crypto initialization vector
  CRYPTO_IV: ""
  # -- Crypto password
  CRYPTO_SECRET: ""
  # -- The mechanism of how to authenticate with the database. Might be 'mqlDriver' for atlas mongodb or SCRAM-SHA-1 for regular one
  DB_AUTH_MECHANISM: "SCRAM-SHA-1"
  # -- Database host
  DB_HOST: ""
  # -- Database name
  DB_DATABASE: "c8"
  # -- Database port
  DB_PORT: "27017"
  # -- Database username
  DB_USERNAME: "c8"
  # -- Database password
  DB_PASSWORD: ""
  # -- Type of the driver. For atlas mongoDbAtlas and mongoDb for the regular instance
  MONGO_DRIVER_TYPE: "mongoDb"
  # -- Url on which the application will be available. For example https://configure8.my-company.io
  DEEPLINK_URL: ""
  # -- Different configurations preset, by default should be prod, other only for the development.
  ENV: "prod"
  # -- GitHub application client id. Should be created per installation in advance
  GITHUB_APP_CLIENT_ID: "na"
  # -- GitHub application client secret.
  GITHUB_APP_CLIENT_SECRET: "na"
  # -- GitHub application installation url.
  GITHUB_APP_INSTALL_URL: "na"
  # -- Google application key. Required for the sign in with google
  GOOGLE_KEY: "na"
  # -- Google application secret. Required for the login with google
  GOOGLE_SECRET: "na"
  # -- Url on which the application will be available. Usually should be the same as DEEPLINK_URLFor example https://configure8.my-company.io
  HOOKS_CALLBACK_URL: ""
  # -- Unique secret used for sign user's JWT tokens
  JWT_SECRET: ""
  # -- Might be info, error, verbose, warning. By default recommended to be info 
  LOGGING_LEVEL: "info"
  # -- Disabling/enabling application for the maintenance
  MAINTENANCE_MODE: "false"
  # -- Used only for the development, should be production
  NODE_ENV: "production"
  # -- Application port
  NODE_PORT: "5000"
  # -- Elastic url
  OPENSEARCH_NODE: ""
  # -- Application analytics segment key
  SEGMENT_KEY: "na"
  # -- The application name, should be c8app
  SERVICE: "c8app"
  # -- Maximum time for the Self serve actions
  SSA_TIMEOUT: "10000"
  # -- URL for the self serve actions. Should be https://configure8.my-company.io/self-service/api/v1/
  SSA_URL: "placeholder"
  # -- Application stage, beyond development should be prod
  STAGE: "prod"
  # -- Description for the swagger file, usually shouldn't be changed
  SWAGGER_DESCRIPTION: "Prod Testing"
  # -- Enable or disable swagger documentation
  SWAGGER_ENABLED: "false"
  # -- Swagger documentation relative url, by default /docs
  SWAGGER_PREFIX: "na"
  # -- Swagger documentation title
  SWAGGER_TITLE: "C8 Backend API"
  # -- Application timezone
  TZ: "America/New_York"
  # -- Application version. Should be with the default value
  VERSION: "v1.0.0"
  # -- RabbitMQ host
  RABBITMQ_HOST: ""
  # -- RabbitMQ port
  RABBITMQ_PORT: 5672
  # -- RabbitMQ user
  RABBITMQ_USERNAME: ""
  # -- RabbitMQ password
  RABBITMQ_PASSWORD: ""
